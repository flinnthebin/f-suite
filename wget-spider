#!/usr/bin/env sh

client_cert="/home/archer/uni/COMP6843/z3291100.p12"
client_pass="z3291100"
outfile="spider_out.txt"
save_mode=0

usage() {
  echo "Usage: $0 [-s] URL"
  exit 1
}

# Only parse the -s flag for save mode
while getopts ":s" opt; do
  case ${opt} in
    s)
      save_mode=1
      ;;
    :)
      echo "Error: Option -$OPTARG requires an argument."
      usage
      ;;
    \?)
      echo "Error: Invalid option -$OPTARG"
      usage
      ;;
  esac
done

shift $((OPTIND - 1))
if [ $# -ne 1 ]; then
  echo "Error: Missing URL."
  usage
fi

url="$1"

if [ "$save_mode" -eq 1 ]; then
  download_dir="spider_dir"
  echo "Save mode enabled. Downloading HTML files into directory: $download_dir"
  mkdir -p "$download_dir" || { echo "Error creating directory: $download_dir"; exit 1; }
  mode_option="-P $download_dir"
else
  echo "Running wget in spider (spider-only) mode..."
  mode_option="--spider --ignore-robots --wait=1 --random-wait"
fi

echo "Target URL: $url"
echo "Logging wget output to: $outfile"

if [ -n "$client_cert" ]; then
  if [ -n "$client_pass" ]; then
    echo "Using client certificate: $client_cert with provided password (hardcoded)."
    tmp_cert=$(mktemp) || { echo "Error creating temporary file."; exit 1; }
    tmp_key=$(mktemp) || { echo "Error creating temporary file."; exit 1; }

    if ! openssl pkcs12 -in "$client_cert" -clcerts -nokeys -passin pass:"$client_pass" -out "$tmp_cert"; then
      echo "Error extracting certificate from $client_cert"
      rm -f "$tmp_cert" "$tmp_key"
      exit 1
    fi

    if ! openssl pkcs12 -in "$client_cert" -nocerts -nodes -passin pass:"$client_pass" -out "$tmp_key"; then
      echo "Error extracting private key from $client_cert"
      rm -f "$tmp_cert" "$tmp_key"
      exit 1
    fi

    wget -r $mode_option --certificate="$tmp_cert" --private-key="$tmp_key" "$url" -o "$outfile"

    rm -f "$tmp_cert" "$tmp_key"
  else
    echo "Using client certificate: $client_cert (no password provided)."
    wget -r $mode_option --certificate="$client_cert" --private-key="$client_cert" "$url" -o "$outfile"
  fi
else
  wget -r $mode_option "$url" -o "$outfile"
fi

echo "Spidering complete."

if [ "$save_mode" -eq 1 ]; then
  echo "Creating wordlist of visited URLs..."
  find "$download_dir" -type f | sed "s|^$download_dir/|https://|g" > visited_urls.txt
  echo "Visited URLs wordlist created in: visited_urls.txt"
fi
